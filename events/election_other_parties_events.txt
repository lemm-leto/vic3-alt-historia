namespace = election_other_parties_events

# Man Over Machine
# The Agrarian Party complains about factories and blames the capitalists/industrialists for making them lose momentum
election_other_parties_events.1 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.1.t
	desc = election_other_parties_events.1.d
	flavor = election_other_parties_events.1.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/asia_farmers_market.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/asia/farmers_market"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = agrarian_party
		}
		any_scope_state = {
			OR = {
				has_industry_building = yes
				has_heavy_industry_building = yes
			}
			level >= 5
		}
		ig:ig_industrialists = {
			is_marginal = no
		}
		has_technology_researched = intensive_agriculture
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = agrarian_party }
			save_scope_as = agrarian_party
		}
		random_scope_state = {
			limit = {
				OR = {
					has_industry_building = yes
					has_heavy_industry_building = yes
				}
				level >= 5
			}
			save_scope_as = industrial_state
		}
		ig:ig_industrialists = {
			save_scope_as = ig_industrialists
		}
	}

	option = { #factories could never replace men
		name = election_other_parties_events.1.a
		py:agrarian_party = {
			add_momentum = 0.15
		}
		ig:ig_rural_folk = { #rural folk agrees
			add_modifier = {
				name = anti_industrial_party_modifier # interest_group_approval_add
				months = normal_modifier_time
			}
		}
	}

	option = { #progress always finds a way
		name = election_other_parties_events.1.b
		default_option = yes
		py:agrarian_party = {
			add_momentum = -0.2
		}
	}
}

# God's Will
# Religious Party leader preaches that God wants them to win
election_other_parties_events.2 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.2.t
	desc = election_other_parties_events.2.d
	flavor = election_other_parties_events.2.f

	duration = 3

	event_image = {
		trigger = {
			OR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:coptic
			}
		}
		video = "gfx/event_pictures/southamerica_christianity.bk2"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
		on_opened_soundeffect = "event:/SFX/Events/southamerica/christianity" 
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:hindu
				religion = rel:sikh
			}
		}
		video = "gfx/event_pictures/asia_hinduism_sikhism.bk2"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
		on_opened_soundeffect = "event:/SFX/Events/asia/hinduism_sikhism" 
	}
	event_image = {
		trigger = {
			religion = rel:shinto
		}
		video = "gfx/event_pictures/asia_confucianism_shinto.bk2"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
		on_opened_soundeffect = "event:/SFX/Events/asia/confucianism_shinto" 
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
			}
		}
		video = "gfx/event_pictures/asia_buddhism.bk2"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
		on_opened_soundeffect = "event:/SFX/Events/asia/buddhism" 
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/middleeast_islam.bk2"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
		on_opened_soundeffect = "event:/SFX/Events/middleeast/islam" 
	}
	event_image = {
		trigger = {
			NOR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:coptic
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
				religion = rel:shinto
				religion = rel:hindu
				religion = rel:sikh
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/africa_leader_arguing.bk2"
	
		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
		on_opened_soundeffect = "event:/SFX/Events/africa/leader_arguing" 
	}

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = religious_party
		}
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = religious_party }
			save_scope_as = religious_party
		}
		ig:ig_devout = {
			save_scope_as = ig_devout
			leader = {
				save_scope_as = religious_leader
			}
		}
	}

	option = { #and who are we to go against God's will
		name = election_other_parties_events.2.a
		py:religious_party = {
			add_momentum = 0.2
		}
		ig:ig_devout = { #wahooo
			add_modifier = {
				name = gods_will_modifier # interest_group_pol
				months = normal_modifier_time
			}
		}
	}

	option = { #we didn't get the memo
		name = election_other_parties_events.2.b
		default_option = yes
		py:religious_party = {
			add_momentum = -0.25
		}
		scope:religious_leader = { #we ruin this guy's life
			add_modifier = {
				name = gods_wont_modifier #hehe
				months = normal_modifier_time
			}
		}
	}
	
	option = { #no, God wants THEM to win
		name = election_other_parties_events.2.c
		trigger = {
			any_active_party = {
				is_party_type = conservative_party
			}
		}
		py:conservative_party = {
			add_momentum = 0.2
		}
	}
}

# Ordo Naturalis
# The Military Party gains momentum when you're at war
election_other_parties_events.3 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.3.t
	desc = election_other_parties_events.3.d
	flavor = election_other_parties_events.3.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_before_the_battle.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/before_the_battle"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = military_party
		}
		is_at_war = yes
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = military_party }
			save_scope_as = military_party
		}
		random_scope_war = {
			save_scope_as = ongoing_war
		}
	}

	option = { #these people are our only option
		name = election_other_parties_events.3.a
		py:military_party = {
			add_momentum = 0.2
		}
		ig:ig_armed_forces = { #armed forces like this
			add_modifier = {
				name = supported_war_politics_modifier # interest_group_approval_add
				months = normal_modifier_time
			}
		}
		add_radicals = { #people don't like being at war
			value = 0.1
		}
		if = {
			limit = {
				any_interest_group = {
					leader = {
						has_ideology = ideology_pacifist
					}
				}
			}
			every_interest_group = {
				limit = {
					leader = {
						has_ideology = ideology_pacifist
					}
				}
				add_modifier = {
					name = supported_war_leaders_modifier
					months = short_modifier_time
				}
			}
		}
		ai_chance = {
			base = 10
		}
	}

	option = { #they need to stop being populists
		name = election_other_parties_events.3.b
		default_option = yes
		py:military_party = {
			add_momentum = -0.25
		}
		add_loyalists = {
			value = 0.15
			pop_type = academics
		}
		add_radicals = {
			value = 0.1
			pop_type = officers
		}
		add_radicals = {
			value = 0.1
			pop_type = soldiers
		}
		ai_chance = {
			base = 50
		}
	}
}

# Lagom
# Social Democrats say "hey, at least we're not THAT guy" (communists/radicals/anarchists)
election_other_parties_events.4 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.4.t
	desc = election_other_parties_events.4.d
	flavor = election_other_parties_events.4.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/asia_politician_parliament_motion.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/asia/politician_parliament_motion"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = social_democrat_party
		}
		OR = {
			any_active_party = {
				is_party_type = communist_party
			}
			any_active_party = {
				is_party_type = anarchist_party
			}
			any_active_party = {
				is_party_type = radical_party
			}
		}
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = social_democrat_party }
			save_scope_as = social_democrat_party
		}
		if = {
			limit = {
				any_active_party = {
					is_party_type = communist_party
				}
			}
			random_active_party = {
				limit = { is_party_type = communist_party }
				save_scope_as = leftist_party
			}
		}
		else_if = {
			limit = {
				any_active_party = {
					is_party_type = anarchist_party
				}
			}
			random_active_party = {
				limit = { is_party_type = anarchist_party }
				save_scope_as = leftist_party
			}
		}
		else_if = {
			limit = {
				any_active_party = {
					is_party_type = radical_party
				}
			}
			random_active_party = {
				limit = { is_party_type = radical_party }
				save_scope_as = leftist_party
			}
		}
	}

	option = { #well, maybe we WANT you to be
		name = election_other_parties_events.4.a
		scope:leftist_party = {
			add_momentum = 0.2
		}
	}
	
	option = { #and thank God for that
		name = election_other_parties_events.4.b
		default_option = yes
		py:social_democrat_party = {
			add_momentum = 0.15
		}
	}
}

# Radical!
# Radicals are radicalising around
election_other_parties_events.5 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.5.t
	desc = election_other_parties_events.5.d
	flavor = election_other_parties_events.5.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/africa_leader_arguing.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/africa/leader_arguing"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = radical_party
		}
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = radical_party }
			save_scope_as = radical_party
		}
	}

	option = { #keep up with the good work
		name = election_other_parties_events.5.a
		py:radical_party = { #you give them momentum
			add_momentum = 0.2
		}
		random_scope_state = { #but in exchange of some radicals
			add_radicals = {
				value = 0.15
			}
			set_variable = radicals_state_1
		}
		random_scope_state = {
			limit = { NOT = { has_variable = radicals_state_1 } }
			add_radicals = {
				value = 0.15
			}
		}
		ai_chance = {
			base = 10
		}
	}

	option = { #pls stop
		name = election_other_parties_events.5.b
		default_option = yes
		py:radical_party = {
			add_momentum = -0.15
		}
		if = {
			limit = {
				any_interest_group = {
					leader = {
						has_ideology = ideology_radical
					}
				}
			}
			every_interest_group = {
				limit = {
					leader = {
						has_ideology = ideology_radical
					}
				}
				add_modifier = {
					name = stopped_radicals_modifier
					months = short_modifier_time
				}
			}
		}
		ai_chance = {
			base = 40
		}		
	}
	
	option = { #pls stop harder
		name = election_other_parties_events.5.c
		trigger = {
			OR = {
				institution_investment_level = {
					institution = institution_police
					value >= 5
				}
				has_law = law_type:law_outlawed_dissent
			}
		}
		py:radical_party = {
			add_momentum = -0.25
		}
		add_radicals = {
			value = 0.05
		}
		ai_chance = {
			base = 10
		}
	}
}
