namespace = election_liberal_events

# An Extreme Reaction
# If there are fascists or ethno-nationalist leaders within the conservative party, the liberals can question their supposedly moderate image.
election_liberal_events.1 = {
	type = country_event
	placement = root
	title = election_liberal_events.1.t
	desc = election_liberal_events.1.d
	flavor = election_liberal_events.1.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/southamerica_election.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/election"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = liberal_party
		}
		any_interest_group = {
			exists = leader
			leader = {
				OR = {
					has_ideology = ideology_fascist
					has_ideology = ideology_ethno_nationalist
				}
			}
			has_party = yes
			party = {
				is_party_type = conservative_party
			}
		}
		any_scope_pop = {
			culture_accepted = no
		}
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = liberal_party }
			save_scope_as = liberal_party
		}
		random_interest_group = {
			limit = {
				exists = leader
				leader = {
					OR = {
						has_ideology = ideology_fascist
						has_ideology = ideology_ethno_nationalist
					}
				}
				has_party = yes
				party = {
					is_party_type = conservative_party
				}
			}
			leader = { save_scope_as = extremist_leader }
			party = { save_scope_as = conservative_party }
		}
	}

	# Accept the argument, giving momentum to the liberal party.
	option = {
		name = election_liberal_events.1.a
		py:liberal_party = {
			add_momentum = 0.25
		}
	}

	# Suggest that these are simply dedicated patriots, giving a smaller momentum to the conservative party, but creating radicalism among discriminated pops.
	option = {
		name = election_liberal_events.1.b
		default_option = yes

		py:conservative_party = {
			add_momentum = 0.15
		}

		add_modifier = {
			name = downplaying_fascism
			months = normal_modifier_time
		}
	}
}

# Liberty Without Anarchy
# If there is an anarchist party, the liberals can position themselves as the path of liberty through reform, avoiding radical change or revolution.
election_liberal_events.2 = {
	type = country_event
	placement = root
	title = election_liberal_events.2.t
	desc = election_liberal_events.2.d
	flavor = election_liberal_events.2.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/southamerica_election.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/election"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_active_party = {
			is_party_type = liberal_party
		}
		any_active_party = {
			is_party_type = anarchist_party
		}
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = liberal_party }
			save_scope_as = liberal_party
		}
		random_active_party = {
			limit = { is_party_type = anarchist_party }
			save_scope_as = anarchist_party
		}
	}

	# Accept the argument, giving momentum to the liberal party.
	option = {
		name = election_liberal_events.2.a
		py:liberal_party = {
			add_momentum = 0.25
		}
	}

	# Argue that the system itself must be overthrown, giving momentum to the anarchist party.
	option = {
		name = election_liberal_events.2.b
		default_option = yes

		py:anarchist_party = {
			add_momentum = 0.25
		}
	}
}

# A Gentler [ROOT.GetCountry.GetName]
# If there is a pacifist leader in the liberal party and the country has high infamy, they can campaign on improving the country's image with a softer foreign policy.
election_liberal_events.3 = {
	type = country_event
	placement = root
	title = election_liberal_events.3.t
	desc = election_liberal_events.3.d
	flavor = election_liberal_events.3.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/southamerica_election.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/election"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		any_interest_group = {
			exists = leader
			leader = {
				has_ideology = ideology_pacifist
			}
			has_party = yes
			party = {
				is_party_type = liberal_party
			}
		}
		infamy >= infamy_threshold:infamous
	}

	immediate = {
		random_active_party = {
			limit = { is_party_type = liberal_party }
			save_scope_as = liberal_party
		}
		random_scope_character = {
			limit = {
				has_ideology = ideology_pacifist
				interest_group.party = {
					is_party_type = liberal_party
				}
			}
			save_scope_as = pacifist_leader
		}
	}

	# Accept the argument, giving momentum to the liberal party and some popularity to the pacifist.
	option = {
		name = election_liberal_events.3.a
		py:liberal_party = {
			add_momentum = 0.25
		}
		scope:pacifist_leader = {
			add_modifier = {
				name = dove_of_reconciliation # character_popularity_add
				months = normal_modifier_time
			}
		}
		change_infamy = -5
	}

	# Argue that it is good to be feared, gaining a modifier that slows infamy decay.
	option = {
		name = election_liberal_events.3.b
		default_option = yes

		add_modifier = {
			name = better_to_be_feared # country_infamy_decay_mult / negative
			months = normal_modifier_time
		}
	}
}

# Open Markets
# If there are shortages of consumer goods and the country does not have Free Trade, the liberals (or Free Trade Party) can campaign on easing trade restrictions.
election_liberal_events.4 = {
	type = country_event
	placement = root
	title = election_liberal_events.4.t
	desc = election_liberal_events.4.d
	flavor = election_liberal_events.4.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/southamerica_election.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/election"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		NOT = { has_law = law_type:law_free_trade }
		any_active_party = {
			OR = {
				is_party_type = liberal_party
				is_party_type = free_trade_party
			}
		}
		any_interest_group = {
			is_in_government = yes
			law_stance = {
				law = law_type:law_free_trade
				value < neutral
			}
			has_party = yes
			party = {
				NOT = { is_party_type = liberal_party }
				NOT = { is_party_type = free_trade_party }
			}
		}
		market_capital.market = {
			OR = {
				mg:grain = { is_market_goods_expensive = yes }
				mg:fish = { is_market_goods_expensive = yes }
				mg:fabric = { is_market_goods_expensive = yes }
				mg:wood = { is_market_goods_expensive = yes }
				mg:groceries = { is_market_goods_expensive = yes }
				mg:clothes = { is_market_goods_expensive = yes }
				mg:furniture = { is_market_goods_expensive = yes }
			}
		}
	}

	immediate = {
		if = {
			limit = { exists = py:free_trade_party }
			py:free_trade_party = { save_scope_as = free_trade_campaign_party }
		}
		else = {
			py:liberal_party = { save_scope_as = free_trade_campaign_party }
		}
		if = {
			limit = {
				market_capital.market = {
					mg:grain = { is_market_goods_expensive = yes }
				}
			}
			g:grain = { save_scope_as = expensive_good }
		}
		else_if = {
			limit = {
				market_capital.market = {
					mg:fish = { is_market_goods_expensive = yes }
				}
			}
			g:fish = { save_scope_as = expensive_good }
		}
		else_if = {
			limit = {
				market_capital.market = {
					mg:fabric = { is_market_goods_expensive = yes }
				}
			}
			g:fabric = { save_scope_as = expensive_good }
		}
		else_if = {
			limit = {
				market_capital.market = {
					mg:wood = { is_market_goods_expensive = yes }
				}
			}
			g:wood = { save_scope_as = expensive_good }
		}
		else_if = {
			limit = {
				market_capital.market = {
					mg:groceries = { is_market_goods_expensive = yes }
				}
			}
			g:groceries = { save_scope_as = expensive_good }
		}
		else_if = {
			limit = {
				market_capital.market = {
					mg:clothes = { is_market_goods_expensive = yes }
				}
			}
			g:clothes = { save_scope_as = expensive_good }
		}
		else_if = {
			limit = {
				market_capital.market = {
					mg:furniture = { is_market_goods_expensive = yes }
				}
			}
			g:furniture = { save_scope_as = expensive_good }
		}
	}

	# Accept the argument, giving momentum to the liberal (or Free Trade) party.
	option = {
		name = election_liberal_events.4.a
		scope:free_trade_campaign_party = {
			add_momentum = 0.25
		}
	}

	# Argue that the current policy is necessary to keep prices stable, giving a smaller amount of momentum to a government party who oppose free trade.
	option = {
		name = election_liberal_events.4.b
		default_option = yes
		random_interest_group = {
			limit = {
				is_in_government = yes
				law_stance = {
					law = law_type:law_free_trade
					value < neutral
				}
				has_party = yes
				party = {
					NOT = { is_party_type = liberal_party }
					NOT = { is_party_type = free_trade_party }
				}
			}
			party = {
				add_momentum = 0.15
			}
		}
	}
}
