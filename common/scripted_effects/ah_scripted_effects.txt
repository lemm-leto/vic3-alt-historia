#	Example:
# 
#	example_effect = {
#		x = 100
#		y = 50
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

save_neighbor_with_state = {
	random_neighbouring_state = {
		limit = {
			owner = {
				$CRITERIA$
			}
		}
		save_scope_as = neighbor_state
		owner = {
			save_scope_as = neighbor_country
		}

		random_neighbouring_state = {
			limit = {
				owner = ROOT
			}
		save_scope_as = neighbor_neighbor_state
		}
	}
}

save_industrialized_pm_building_and_state = {
	random_scope_building = {
		limit = {
			OR = {
				AND = {
					is_building_type = building_textile_mills
					state = {
						OR = {
							is_production_method_active = {
								building_type = building_textile_mills
								production_method = pm_mechanized_looms
							}
							is_production_method_active = {
								building_type = building_textile_mills
								production_method = pm_automatic_power_looms
							}
						}
					}
				}
				AND = {
					is_building_type = building_furniture_manufacturies
					state = {
						OR = {
							is_production_method_active = {
								building_type = building_furniture_manufacturies
								production_method = pm_mechanized_workshops
							}
							is_production_method_active = {
								building_type = building_furniture_manufacturies
								production_method = pm_watertube_boiler_building_furniture_manufacturies
							}
							is_production_method_active = {
								building_type = building_furniture_manufacturies
								production_method = pm_rotary_valve_engine_building_furniture_manufacturies
							}
							is_production_method_active = {
								building_type = building_furniture_manufacturies
								production_method = pm_assembly_lines_building_furniture_manufacturies
							}
						}
					}
				}
				AND = {
					is_building_type = building_tooling_workshops
					state = {
						OR = {
							is_production_method_active = {
								building_type = building_tooling_workshops
								production_method = pm_watertube_boiler_building_tooling_workshops
							}
							is_production_method_active = {
								building_type = building_tooling_workshops
								production_method = pm_rotary_valve_engine_building_tooling_workshops
							}
							is_production_method_active = {
								building_type = building_tooling_workshops
								production_method = pm_assembly_lines_building_tooling_workshops
							}
						}
					}
				}
				AND = {
					is_building_type = building_paper_mills
					state = {
						OR = {
							is_production_method_active = {
								building_type = building_paper_mills
								production_method = pm_watertube_boiler_building_paper_mills
							}
							is_production_method_active = {
								building_type = building_paper_mills
								production_method = pm_rotary_valve_engine_building_paper_mills
							}
						}
					}
				}
				AND = {
					is_building_type = building_steel_mills
					state = {
						OR = {
							is_production_method_active = {
								building_type = building_steel_mills
								production_method = pm_watertube_boiler_building_steel_mills
							}
							is_production_method_active = {
								building_type = building_steel_mills
								production_method = pm_rotary_valve_engine_building_steel_mills
							}
						}
					}
				}
				AND = {
					is_building_type = building_motor_industry
					state = {
						OR = {
							is_production_method_active = {
								building_type = building_motor_industry
								production_method = pm_watertube_boiler_building_motor_industry
							}
							is_production_method_active = {
								building_type = building_motor_industry
								production_method = pm_rotary_valve_engine_building_motor_industry
							}
						}
					}
				}
			}
		}

		save_scope_as = industrialized_pm_building
		state = {
			save_scope_as = industrialized_pm_state
		}
	}
}

warlord_setup_effect = {
	activate_law = law_type:law_autocracy 
	activate_law = law_type:law_presidential_republic
	activate_law = law_type:law_peasant_levies
		
	every_scope_character = {
		random_list = {
			80 =  {
			}

			20 = {
				add_trait = bandit
			}
		}			
	}
}

embargo_all_starting_goods = {
	embargo_military_starting_goods = yes
	embargo_staple_starting_goods = yes
	embargo_industrial_starting_goods = yes
	embargo_luxury_starting_goods = yes
}

embargo_military_starting_goods = {
		add_embargoed_goods = g:ammunition
		add_embargoed_goods = g:small_arms
		add_embargoed_goods = g:artillery
		add_embargoed_goods = g:manowars
}

embargo_staple_starting_goods = {
		add_embargoed_goods = g:grain
		add_embargoed_goods = g:fish
		add_embargoed_goods = g:fabric
		add_embargoed_goods = g:wood
		add_embargoed_goods = g:groceries
		add_embargoed_goods = g:clothes
		add_embargoed_goods = g:furniture
		add_embargoed_goods = g:paper
}

embargo_industrial_starting_goods = {
		add_embargoed_goods = g:clippers
		add_embargoed_goods = g:silk
		add_embargoed_goods = g:dye
		add_embargoed_goods = g:sulfur
		add_embargoed_goods = g:coal
		add_embargoed_goods = g:iron
		add_embargoed_goods = g:lead
		add_embargoed_goods = g:hardwood
		add_embargoed_goods = g:oil
		add_embargoed_goods = g:engines
		add_embargoed_goods = g:steel
		add_embargoed_goods = g:fertilizer
		add_embargoed_goods = g:tools
		add_embargoed_goods = g:explosives
}

embargo_luxury_starting_goods = {
		add_embargoed_goods = g:porcelain
		add_embargoed_goods = g:meat
		add_embargoed_goods = g:fruit
		add_embargoed_goods = g:liquor
		add_embargoed_goods = g:wine
		add_embargoed_goods = g:tea
		add_embargoed_goods = g:coffee
		add_embargoed_goods = g:sugar
		add_embargoed_goods = g:tobacco
		add_embargoed_goods = g:opium
		add_embargoed_goods = g:luxury_clothes
		add_embargoed_goods = g:luxury_furniture
}


scripted_effect_parties_emergence = {
	if = {
		limit = {
			country_has_voting_franchise = no
		}
		custom_tooltip = PARTIES_EMERGENCE
	}
	update_party_support = yes
}

scripted_effect_parties_disappearence = {
	if = {
		limit = {
			country_has_voting_franchise = yes
		}
		custom_tooltip = PARTIES_DISAPPEARENCE
		update_party_support = yes
	}
}

liberate_slaves = {
	every_scope_pop = {
		limit = {
			is_pop_type = slaves
		}
		if = {
			limit = {
				is_employed = yes
			}
		#	change_poptype = workplace.type.slaves_role
		}
		else = {
		#	change_poptype = pop_type:laborers
		}
	}
}

make_enemies = {
	if = {
		limit = {
			OR = {
				has_diplomatic_pact = {
					who = $country$
					type = alliance
				}
				has_diplomatic_pact = {
					who = $country$
					type = defensive_pact
				}
			}
		}
		if = {
			limit = {
				has_diplomatic_pact = {
					who = $country$
					type = alliance
				}
			}
			remove_diplomatic_pact = {
				country = $country$
				type = alliance
			}
		}
		if = {
			limit = {
				has_diplomatic_pact = {
					who = $country$
					type = defensive_pact
				}
			}
			remove_diplomatic_pact = {
				country = $country$
				type = defensive_pact
			}
		}
		create_truce = {
			country = $country$
		}
	}
	set_relations = {
		country = $country$
		value = relations_threshold:hostile
	}
	if = {
		limit = {
			is_player = no
		}
		set_secret_goal = {
			country = $country$
			secret_goal = conquer
		}
	}
	$country$ = {
		if = {
			limit = {
				is_player = no
			}
			set_secret_goal = {
				country = root
				secret_goal = conquer
			}
		}
	}
}
